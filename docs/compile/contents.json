{
    "name": "Android SDK",
    "text": "<p>The SuperAwesome Android SDK (Software Development Kit) lets you to easily add COPPA-compliant display and video advertisements to your apps.</p>\n<p>This project is hosted on GitHub: <a href=\"https://github.com/SuperAwesomeLTD/sa-mobile-sdk-android\">https://github.com/SuperAwesomeLTD/sa-mobile-sdk-android</a></p>\n",
    "sections": [
        {
            "name": "Getting Started",
            "sections": [
                {
                    "name": "Registering Your App on the Dashboard",
                    "text": "<p>If you haven&#39;t already registered your app on the SuperAwesome Dashboard, you can do that by going to <a href=\"http://dashboard.superawesome.tv\">http://dashboard.superawesome.tv</a> and creating a new app.</p>\n<p><img src=\"img/dashboard.png\" alt=\"\" title=\"Registering an app on the dashboard\"></p>\n<p>Once your app is registered, you can create placements for it and use the documentation provided below to integrate these placements into your website.\nYou can customise your ad placements on this site and add features such as fallback placements.</p>\n"
                },
                {
                    "name": "Adding the Library to Your Project",
                    "text": "<p>First, you have to add the library to your workspace; it can be found at <a href=\"https://github.com/SuperAwesomeLTD/sa-mobile-sdk-android\">https://github.com/SuperAwesomeLTD/sa-mobile-sdk-android</a></p>\n<p>To do this in Android Studio, you can either include the superawesomesdk-*.aar file in your project or download the entire &#39;superawesomesdk&#39; directory and include it using Gradle by inserting the following into your &#39;settings.gradle&#39; file:</p>\n<pre><code>include &#39;superawesomesdk&#39;\nproject(&#39;:superawesomesdk&#39;).projectDir=new File(&#39;../superawesomesdk&#39;)\n</code></pre><p>Next, open the AndroidManifest.xml file in the root of the project. Add two &#39;Uses Permission&#39; items, named android.permission.INTERNET and android.permission.ACCESS_NETWORK_STATE, by copying the following into the root node of your manifest file:</p>\n<pre><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot;/&gt;\n&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;\n</code></pre>"
                }
            ]
        },
        {
            "name": "Banner Ads",
            "sections": [
                {
                    "name": "Banner Ads As Resources",
                    "text": "<p>Declare the banner fragment in the layout XML:</p>\n<pre><code>&lt;fragment\n    android:name=&quot;tv.superawesome.superawesomesdk.fragments.SABannerFragment&quot;\n    android:id=&quot;@+id/sa_banner&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_alignParentBottom=&quot;true&quot;\n    android:layout_centerHorizontal=&quot;true&quot;\n    custom:placementID=&quot;__PLACEMENT_ID__&quot;\n    custom:testMode=&quot;true&quot; /&gt;\n</code></pre><p>Do not forget to replace <code>__PLACEMENT_ID__</code> with you own.\n&#39;testMode&#39; will make your placements show demo ads for as long as the parameter is set to &#39;true&#39;; this is recommended for while you are testing.</p>\n<p>The &#39;custom&#39; namespace is defined in XML by the following attribute:</p>\n<pre><code>xmlns:custom=&quot;http://schemas.android.com/apk/res-auto&quot;\n</code></pre><p>If you want to access the banner view in the Activity, you can do so this way:</p>\n<pre><code>SABannerFragment banner = (SABannerFragment)getSupportFragmentManager().findFragmentById(R.id.sa_banner);\n</code></pre><p>The dimensions of the banner will be the same as your selected size when you created the placement in the Dashboard.</p>\n"
                },
                {
                    "name": "Advanced Configuration",
                    "text": "<p>If you want to be notified of various events in the banner lifecycle, you can set its listener to an object instance that implements the SAPlacementListener interface.</p>\n<p>The following methods are available in the interface:</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onAdLoaded(ad)</td>\n<td>This method is called when the ad is loaded and is ready to display.</td>\n</tr>\n<tr>\n<td>onAdError()</td>\n<td>This method is called when an ad download failed or could not be shown for some reason. This is likely to happen because of networking reasons or other server communication reasons.</td>\n</tr>\n</tbody>\n</table>\n<p>Example implementation:</p>\n<pre><code>banner.setListener(new SAPlacementListener() {\n    @Override\n    public void onAdLoaded(SAAd superAwesomeAd) {\n    }\n    @Override\n    public void onAdError(String message) {\n    }\n});\n</code></pre>"
                }
            ]
        },
        {
            "name": "Interstitial Ads",
            "sections": [
                {
                    "name": "Interstitial Ads As Resources",
                    "text": "<p>Declare the InterstitialView in the layout XML:</p>\n<pre><code>&lt;fragment\n    android:name=&quot;tv.superawesome.superawesomesdk.fragments.SAInterstitialFragment&quot;\n    android:id=&quot;@+id/sa_interstitial&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    custom:placementID=&quot;__PLACEMENT_ID__&quot;\n    custom:testMode=&quot;true&quot;\n    custom:showInstantly=&quot;true&quot; /&gt;\n</code></pre><p>Do not forget to replace <code>__PLACEMENT_ID__</code> with you own.\n&#39;testMode&#39; will make your placements show demo ads for as long as the parameter is set to &#39;true&#39;; this is recommended for while you are testing.\nIf &#39;showInstantly&#39; is set, the ad will open as soon as it has been loaded. Otherwise you can call the interstitial&#39;s &#39;show&#39; method whener you want it to be shown.</p>\n<p>The &#39;custom&#39; namespace is defined in XML by the following attribute:</p>\n<pre><code>xmlns:custom=&quot;http://schemas.android.com/apk/res-auto&quot;\n</code></pre><p>To present the interstitial ad you have to call the <code>present</code> method:</p>\n<pre><code>SAInterstitialFragment interstitial = (SAInterstitialFragment)getSupportFragmentManager().findFragmentById(R.id.sa_interstitial);\n</code></pre><p>The dimensions of the interstitial will be the same as your selected size when you created the placement in the Dashboard.</p>\n"
                },
                {
                    "name": "Advanced Configuration",
                    "text": "<p>If you want to be notified of various events in the banner lifecycle, you can set its listener to an object instance that implements the SAPlacementListener interface.</p>\n<p>The following methods are available in the interface:</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onAdLoaded(ad)</td>\n<td>This method is called when the ad is loaded and is ready to display.</td>\n</tr>\n<tr>\n<td>onAdError()</td>\n<td>This method is called when an ad download failed or could not be shown for some reason. This is likely to happen because of networking reasons or other server communication reasons.</td>\n</tr>\n</tbody>\n</table>\n<p>Example implementation:</p>\n<pre><code>interstitial.setListener(new SAPlacementListener() {\n    @Override\n    public void onAdLoaded(SAAd superAwesomeAd) {\n    }\n    @Override\n    public void onAdError(String message) {\n    }\n});\n</code></pre><p>More events will be available soon.</p>\n"
                }
            ]
        },
        {
            "name": "Video Ads",
            "sections": [
                {
                    "name": "How to Use Video Ads",
                    "text": "<p>The video ads require Google Play Services. You can find more information about setting up Google Play Services <a href=\"http://developer.android.com/google/play-services/setup.html\">here</a>.</p>\n<p>In order to use video ads in your app, first you have to add a preroll placement on the dashboard site. Then, add a SAVideoFragment instance to your view.</p>\n<p>Declare the banner fragment in the layout XML:</p>\n<pre><code>&lt;fragment android:name=&quot;tv.superawesome.superawesomesdk.fragments.SAVideoFragment&quot;\n            android:id=&quot;@+id/sa_video_ad&quot;\n            android:layout_width=&quot;fill_parent&quot;\n            android:layout_height=&quot;fill_parent&quot;\n            custom:placementID=&quot;__PLACEMENT_ID__&quot;\n            custom:testMode=&quot;true&quot;\n            custom:playInstantly=&quot;true&quot; /&gt;\n</code></pre><p>Again, do not forget to replace <code>__PLACEMENT_ID__</code> with you own.</p>\n<p>Once the ad has been loaded it will show the fragment with the video. If &#39;playInstantly&#39; is true, it will play automatically; otherwise the user will see a play button which will start the video ad when pressed. By implementing the VideoViewListener interface your app can react to events that are emitted by the SAVideoFragment instance:</p>\n<pre><code>this.videoAd = (SAVideoFragment)getSupportFragmentManager().findFragmentById(R.id.sa_video_ad);\nthis.videoAd.setListener(new SAVideoViewListener() {\n    @Override\n    public void onAdStart() {\n    }\n\n    @Override\n    public void onAdPause() {\n    }\n\n    @Override\n    public void onAdResume() {\n    }\n\n    @Override\n    public void onAdFirstQuartile() {\n    }\n\n    @Override\n    public void onAdMidpoint() {\n    }\n\n    @Override\n    public void onAdThirdQuartile() {\n    }\n\n    @Override\n    public void onAdComplete() {\n    }\n\n    @Override\n    public void onAdClosed() {\n    }\n\n    @Override\n    public void onAdSkipped() {\n    }\n\n    @Override\n    public void onAdLoaded(SAAd superAwesomeAd) {\n    }\n\n    @Override\n    public void onAdError(String message) {\n    }\n});\n</code></pre>"
                },
                {
                    "name": "Fullscreen Video Ads",
                    "text": "<p>If you just want to display a fullscreen video ad and not to worry about the listener interface, this is the easiest way to show a video ad.</p>\n<p>Use the following code within an activity to display the fullscreen video ad:</p>\n<pre><code>SAVideoActivity.start(MainActivity.this, &quot;__PLACEMENT_ID__&quot;);\n</code></pre>"
                }
            ]
        },
        {
            "name": "Parental Gate",
            "text": "<p>Parental gates are used in apps targeted towards kids to prevent them from engaging in commerce or following links out of an app to websites, social networks, or other apps without the knowledge of their parent or guardian. A parental gate presents an adult level task which must be completed in order to continue.</p>\n<p>To enable the parental gate, use the following code in your project:</p>\n<pre><code>SuperAwesome.getInstance().setUseParentalgate(true);\n</code></pre><p><img src=\"img/parental_gate.png\" alt=\"\" title=\"Parental Gate on Android\"></p>\n"
        },
        {
            "name": "Demo Placements",
            "text": "<p>The following placements can be used for testing. These placements have a 100% fill rate.</p>\n<table>\n<thead>\n<tr>\n<th>App ID</th>\n<th>Placement ID</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>14</td>\n<td>5247930</td>\n<td>320x50 banner</td>\n</tr>\n<tr>\n<td>14</td>\n<td>5513681</td>\n<td>300x50 banner</td>\n</tr>\n<tr>\n<td>14</td>\n<td>5513680</td>\n<td>728x90 banner</td>\n</tr>\n<tr>\n<td>14</td>\n<td>5513682</td>\n<td>300x250 banner</td>\n</tr>\n<tr>\n<td>14</td>\n<td>5247931</td>\n<td>320x480 interstitial</td>\n</tr>\n<tr>\n<td>14</td>\n<td>5513683</td>\n<td>768x1024 interstitial</td>\n</tr>\n<tr>\n<td>14</td>\n<td>314228</td>\n<td>video</td>\n</tr>\n</tbody>\n</table>\n"
        },
        {
            "name": "Technical Support",
            "text": "<p>If you have any questions or you need technical support, please, do not hesitate to contact us at <a href=\"mailto:devsupport@superawesome.tv\">devsupport@superawesome.tv</a>. We will make every attempt to answer your inquiry as quickly as possible.</p>\n"
        },
        {
            "name": "License",
            "text": "<p>See the LICENSE.txt file for more information.</p>\n"
        }
    ]
}